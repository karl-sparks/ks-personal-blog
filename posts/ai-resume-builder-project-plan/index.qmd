---
title: "Hello Resume Builder"
author: "Karl Sparks"
date: "2023-10-02"
categories: 
  - resume-builder
  - design
---

As a first AI project, I thought it fitting that I build an AI to build resumes.

My objectives with this project are:

1. Enhance my skills in developing a comprehensive application from start to finish, including deployment.

2. Create a practical and valuable tool as the project outcome.

To achieve these objectives, I explored various approaches. Initially, I considered using a straightforward Google Colab notebook, which would effectively address objective 2 by providing the necessary functionality. However, it would not fulfill objective 1.

To address both objectives comprehensively, I will develop a more intricate yet robust application using cloud technologies. A simplified diagram is provided below, outlining the primary components:

![Simple Architecture](diagram.png)

The main components are:

1. Serverless Backend: This component will be constructed using AWS Lambda, and its primary function will be to facilitate API access to the underlying model.

    1. The advantages of utilizing serverless backends include scalability for the final app in a resource-efficient manner, as they separate the resource intensive aspects from the continuously running server.

    2. The logic of the underlying model will be further refined in proof-of-concept (POC) notebooks. It is likely to break down the resume generation process into multiple components, utilizing ChatGPT to build each part. Additional context will be sourced from the user and/or job advertisements. Another model may be employed to assess the quality of the output.

2. Resume Builder App: This component will primarily focus on the user interface (UI) and will likely be built using Streamlit for efficiency. Its role will be to gather user data and present the generated resumes to users.

3. ChatGPT: The core model for resume generation will be ChatGPT by OpenAI, which will be accessed through OpenAI's API.

4. Various datasets stored in AWS: Depending on the progress of the proof-of-concept (POC) work, additional datasets will be collected and stored in AWS. These datasets may encompass:

    1. Job ads

    2. Resumes

    3. Linkedin profiles etc

I anticipate that this approach will serve as a valuable opportunity for honing my skills in the development and deployment of machine learning applications while simultaneously delivering a practical tool. Throughout this endeavor, I intend to maintain a flexible approach, allowing the final design and choice of tools to evolve based on insights gained from experimentation and proof-of-concept work. I will periodically document my progress towards achieving these goals by sharing POC updates on this blog.